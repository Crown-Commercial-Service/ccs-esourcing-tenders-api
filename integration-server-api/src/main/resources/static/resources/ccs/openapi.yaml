openapi: 3.0.0
info:
  title: CCS eSourcing Integration Server API
  version: 0.0.1-SNAPSHOT
servers:
  - description: 'CCS GPaaS Server (Dev,Sandbox)'
    url: >-
      https://{environment}-ccs-esourcing-tenders-api.london.cloudapps.digital/crown-commercial-service/ccs-esourcing-client/0.0.1-SNAPSHOT
    variables:
      environment:
        default: sandbox
        enum:
          - dev
          - sandbox
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/joeraymond-roweit/Integration_Server_API/0.0.1-SNAPSHOT
tags:
  - name: Procurement Case
  - name: ITT Events
  - name: RfxStatus
paths:
  /tenders/ProcurementProjects/salesforce:
    put:
      tags:
        - Procurement Case
      summary:  "US 1.0 - Create a new case in Jaggaer - Salesforce will call Jaggaer"
      operationId: createCase
      responses:
        '202':
          description: Success (for object creation). Its information is available in the
            data field at the top level of the response body. The API URL where
            the object can be retrieved is also returned in the Location header of the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectTender200Response'
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504GatewayTimeout'
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectTender'
        description: Created sourcing object
        required: true
  /tenders/ProcurementProjects/{procID}/events:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
    post:
      description: Creates a new Event for the Procurement Project.
      summary: Create a Procurement Event
      tags:
        - ITT Events
      operationId: createRFx
      responses:
        '200':
          description: Event Code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventID'
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504GatewayTimeout'
        default:
          description: successful operation
      requestBody:
        content:
          application/json:
            schema:
              type: object
        description: Created sourcing object
        required: true
  /tenders/ProcurementProjects/{procID}/events/{eventID}/terminate/:
    parameters:
      - $ref: '#/components/parameters/ProcurementParam'
      - $ref: '#/components/parameters/EventParam'
    put:
      description: Terminate the RFx
      tags:
        - ITT Events
      operationId: terminateRFx
      responses:
        '200':
          description: Termination Code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TerminationCode'
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504GatewayTimeout'
  /tenders/ProcurementProjects/updateProcurementStage:
    put:
      tags:
        - RfxStatus
      description: Update Procurement Project stage
      operationId: updateCaseRFxStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RfxStatusList'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RfxStatus200ResponseList'
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504GatewayTimeout'
components:
  schemas:
    ProjectTender:
      type: object
      required:
        - projectOwnerLogin
        - subject
        - procurementReference
        - rfx
      properties:
        tenderReferenceCode:
          type: string
          example: project_1078
        projectOwnerLogin:
          type: string
          example: user@crowncommercial.gov.uk
        subject:
          type: string
          example: Project for Provision of Face Masks
        procurementReference:
          type: string
          example: '324233324'
        rfx:
          $ref: '#/components/schemas/Rfx'
    Rfx:
      title: Rfx
      type: object
      required:
        - shortDescription
        - value
        - publishDate
        - closeDate
        - procurementRoute
      properties:
        shortDescription:
          type: string
          example: RFQ for Provision of PPE
        longDescription:
          type: string
          example: Possibly used to identify RFI
        rfiFlag:
          type: string
          example: "1"
        value:
          type: number
          format: float
          example: 9000.0
        templateReferenceCode:
          type: string
          example: itt_543
        qualEnvStatus:
          type: integer
          example: 0
        techEnvStatus:
          type: integer
          example: 1
        commEnvStatus:
          type: integer
          example: 0
        publishDate:
          type: string
          example: '2021-01-28T12:00:00.000+00:00'
        closeDate:
          type: string
          example: '2021-02-27T12:00:00.000+00:00'
        visibilityEGComments:
          type: integer
          example: 1
        rankingStrategy:
          type: string
          example: BEST_TECHNICAL_SCORE
        procurementRoute:
          type: string
          example: Call Off (Competition)
        frameworkName:
          type: string
          example: TT3242
        frameworkLotNumber:
          type: string
          example: Lot 1
        frameworkRMNumber:
          type: string
          example: 12345
    RfxStatusList:
      type: array
      items:
        $ref: '#/components/schemas/RfxStatusItem'
    RfxStatusItem:
      title: RfxStatus
      required:
        - ownerUserLogin
        - actualStartDate
        - closingTime
        - procurementReference
        - stage
        - tenderEndDate
      type: object
      properties:
        ownerUserLogin:
          type: string
          example: user@crowncommercial.gov.uk
        procurementReference:
          type: string
          example: CO0001
        stage:
          type: string
          example: ITT Live
        actualStartDate:
          type: string
          example: '2020-03-27T15:38:53.000+0000'
        tenderEndDate:
          type: string
          example: '2020-03-27T15:38:53.000+0000'
        closingTime:
          type: string
          example: '14:38:53.000Z'
    RfxStatus200ResponseList:
      type: array
      items:
        $ref: '#/components/schemas/RfxStatus200Response'
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        status:
          type: string
        title:
          type: string
        detail:
          type: string
    RfxStatus200Response:
      type: object
      properties:
        procurement_reference:
          type: string
          example: CO0001
        isSuccess:
          type: string
          example: 'true'
        errorMessage:
          type: string
          example: ''
    ProcurementID:
      type: string
      example: project_1187
    EventID:
      type: string
      example: itt_185
    TerminationCode:
      type: string
      example: withdrawn
    ProjectTender200Response:
      type: object
      properties:
        tenderReferenceCode:
          type: string
          description: project code (project id)
          example: project_1063
        rfxReferenceCode:
          type: string
          description: the itt code (tender id)
          example: itt_586
  parameters:
    ProcurementParam:
      name: procID
      in: path
      required: true
      description: Procurement Project ID
      schema:
        $ref: '#/components/schemas/ProcurementID'
    EventParam:
      name: eventID
      in: path
      required: true
      description: Procurement Event ID
      schema:
        $ref: '#/components/schemas/EventID'
  responses:
    400InvalidRequest:
      description: >-
        Invalid request. This usually occurs because of a missing or malformed
        parameter. Check the documentation and the syntax of your request and
        try again.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for requires L2 authentication.
                default: Invalid Request
    401Unauthorized:
      description: >-
        No authorization. A valid API key was not provided with the request, so
        the API could not associate a user with the request.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for requires L2 authentication.
                default: >-
                  No authorization. A valid API key was not provided with the
                  request, so the API could not associate a user with the
                  request.
    403Forbidden:
      description: >-
        The API key and request syntax was valid but the server is refusing to
        complete the request. This can happen if you are trying to read or write
        to objects or properties that you do not have access to.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: You are not authorized to access this page.
                default: You are not authorized to access this page.
    404NotFound:
      description: >-
        Not found. Either the request method and path supplied do not specify a
        known action in the API, or the object specified by the request does not
        exist.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for could not be found.
                default: The resource you were looking for could not be found.
    429TooManyRequests:
      description: Too Many Requests
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource has recieved to many requests
                default: The resource has recieved to many requests
    500InternalServerError:
      description: An unknown server error has occurred.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: An unknown error has occurred.
                default: An unknown error has occurred.
    502BadGateway:
      description: >-
        Bad Gateway. The server received an invalid response or backend is not
        ready to handle requests. Repeat request for repeatable operations or
        check object data with interval 1-5 min.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Gateway Error
                default: Gateway Error
    504GatewayTimeout:
      description: >-
        Bad Gateway. The server received an invalid response or backend is not
        ready to handle requests. Repeat request for repeatable operations or
        check object data with interval 1-5 min.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Service Unavailable
                default: Service Unavailable
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key
security:
  - ApiKeyAuth: []