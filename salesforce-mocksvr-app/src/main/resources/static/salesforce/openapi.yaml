openapi: 3.0.0
info:
  title: CCS eSourcing Salesforce Client API
  version: 0.0.1-SNAPSHOT
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/joeraymond-roweit/Salesforce_Client_API/0.0.1-SNAPSHOT
tags:
  - name: RfxStatusList
paths:
  /tenders/ProcurementProjects/updateProcurementStage:
    put:
      tags:
        - RfxStatusList
      description: Update Procurement Project stage
      operationId: updateCaseRFxStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RfxStatusList'
      responses:
        '200':
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RfxStatus200ResponseList'
        '400':
          $ref: '#/components/responses/400InvalidRequest'
        '401':
          $ref: '#/components/responses/401Unauthorized'
        '403':
          $ref: '#/components/responses/403Forbidden'
        '404':
          $ref: '#/components/responses/404NotFound'
        '429':
          $ref: '#/components/responses/429TooManyRequests'
        '500':
          $ref: '#/components/responses/500InternalServerError'
        '502':
          $ref: '#/components/responses/502BadGateway'
        '504':
          $ref: '#/components/responses/504GatewayTimeout'
components:
  schemas:
    RfxStatusList:
      type: array
      items:
        $ref: '#/components/schemas/RfxStatusItem'
    RfxStatusItem:
      title: RfxStatus
      required:
        - actualStartDate
        - closingTime
        - procurementReference
        - stage
        - tenderEndDate
      type: object
      properties:
        procurementReference:
          type: string
          example: CO0001
        stage:
          type: string
          example: ITT Live
        actualStartDate:
          type: string
          example: '2020-03-27T15:38:53.000+0000'
        tenderEndDate:
          type: string
          example: '2020-03-27T15:38:53.000+0000'
        closingTime:
          type: string
          example: '14:38:53.000Z'
    RfxStatus200ResponseList:
      type: array
      items:
        $ref: '#/components/schemas/RfxStatus200Response'
    RfxStatus200Response:
      type: object
      properties:
        procurement_reference:
          type: string
          example: CO0001
        isSuccess:
          type: string
          example: 'true'
        errorMessage:
          type: string
          example: ''
    Errors:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/Error'
    Error:
      type: object
      properties:
        status:
          type: string
        title:
          type: string
        detail:
          type: string
  responses:
    400InvalidRequest:
      description: >-
        Invalid request. This usually occurs because of a missing or malformed
        parameter. Check the documentation and the syntax of your request and
        try again.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for requires L2 authentication.
                default: Invalid Request
    401Unauthorized:
      description: >-
        No authorization. A valid API key was not provided with the request, so
        the API could not associate a user with the request.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for requires L2 authentication.
                default: >-
                  No authorization. A valid API key was not provided with the
                  request, so the API could not associate a user with the
                  request.
    403Forbidden:
      description: >-
        The API key and request syntax was valid but the server is refusing to
        complete the request. This can happen if you are trying to read or write
        to objects or properties that you do not have access to.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: You are not authorized to access this page.
                default: You are not authorized to access this page.
    404NotFound:
      description: >-
        Not found. Either the request method and path supplied do not specify a
        known action in the API, or the object specified by the request does not
        exist.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource you were looking for could not be found.
                default: The resource you were looking for could not be found.
    429TooManyRequests:
      description: Too Many Requests
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: The resource has recieved to many requests
                default: The resource has recieved to many requests
    500InternalServerError:
      description: An unknown server error has occurred.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: An unknown error has occurred.
                default: An unknown error has occurred.
    502BadGateway:
      description: >-
        Bad Gateway. The server received an invalid response or backend is not
        ready to handle requests. Repeat request for repeatable operations or
        check object data with interval 1-5 min.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Gateway Error
                default: Gateway Error
    504GatewayTimeout:
      description: >-
        Bad Gateway. The server received an invalid response or backend is not
        ready to handle requests. Repeat request for repeatable operations or
        check object data with interval 1-5 min.
      content:
        application/vnd.api+json:
          schema:
            allOf:
              - $ref: '#/components/schemas/Errors'
            type: object
            properties:
              description:
                type: string
                example: Service Unavailable
                default: Service Unavailable
  securitySchemes:
    oAuthPassword:
      type: oauth2
      flows:
        password:
          tokenUrl: >-
            https://crowncommercial--bgsdtv2.my.salesforce.com/services/oauth2/token
          scopes: {}
security:
  - oAuthPassword: []